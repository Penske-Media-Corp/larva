@import 'setup';

// Functional styles for the sticky header. Visual styles are added with utilities
$sticky-transform-y:    3.125rem;
$mobile-header-height:  #{var( --sticky-nav-height )};

// Package the base sticky positioning styles for use in mulitple places.
@mixin _sticky-header-positioning {
	position: fixed;
	width: 100%;
	z-index: $z-index-sticky-header;
	transform: translateY(0);
	top: var(--login-bar-height, 0);
}

@keyframes slideDown {
	0% {
		transform: translateY(-100%);
	}

	100% {
		transform: translateY(0);
	}
}

// Needs to slide up still - problem is that it is display: none'd and that would have to have a delay before being applied
.js-sticky-header-slidedown {
	@include pmc-breakpoint( desktop ) {
		transform: translateY(-100%);
	}
}

.is-sticky .js-sticky-header-slidedown {
	@include pmc-breakpoint( desktop ) {
		animation-name: slideDown;
		animation-duration: 250ms;
		animation-fill-mode: forwards;
		transform: translateY(0);
	}
}

// The data-header-sticky wrapper is not hooked up to JS, but provides the CSS transform for
// hiding/showing the sticky header.
.js-Header-contents {
	position: relative;
	transition: transform $transition-transform;
	will-change: transform;

}

.has-side-skins .js-Header-contents {
	max-width: $screen-desktop;
}

.is-sticky .js-Header-contents {
	@include _sticky-header-positioning;
}

.js-hide-when-sticky {

	.is-sticky & {
		display: none;
	}
}

.js-show-when-sticky {

	display: none;

	.is-sticky & {
		display: block;
	}
}
