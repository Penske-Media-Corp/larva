# This is a basic workflow to help you get started with Actions

name: Release to npm

# -- steps for larva release, for reference
# this action would be triggered by: a button in the Actions tab
# start at the master branch
# checkout a release branch from master, 
  # increment the name (assume minor releases most of the time) by reading lerna json file
  # run git checkout
# assume changelog has been updated
# run npx lerna publish
  # asks if minor/major release, user has to manually type. probably https://github.com/lerna/lerna/tree/main/commands/version#options
  # try running npx lerna publish minor --yes
# create a PR to merge release branch to master
  # at least one human approval required (nice to have: auto ping #larva channel asking for PR approval)
  # pipelines have to pass
  # manual merge required (nice to have: have a machine user w/ token in the allowlist that can bypass)
# tag latest release on repo

# Controls when the workflow will run
# Allows you to run this workflow manually from the Actions tab
# docs: https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_dispatch
# https://docs.github.com/en/actions/managing-workflow-runs/manually-running-a-workflow
on:
  push:
    branches:
      - feature/automated-releases
  workflow_dispatch:
  

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy-release:
    name: Create and Deploy NPM Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout release branch
        uses: actions/checkout@v3
        with:
          ref: 'master'
          # token: Ehh?

#   # SAMPLE - BOUNCE THIS
#   # This workflow contains a single job called "build"
#   build:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v3

#       # Runs a single command using the runners shell
#       - name: Run a one-line script
#         run: echo Hello, world!

#       # Runs a set of commands using the runners shell
#       - name: Run a multi-line script
#         run: |
#           echo Add other actions to build,
#           echo test, and deploy your project.
